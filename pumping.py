import telebot
import openai

# C·∫•u h√¨nh
TELEGRAM_TOKEN = '7629597522:AAHZHoRUNcwGH6wapzeNB7I-INIRI6-1dJw'
OPENAI_API_KEY = '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'

openai.api_key = OPENAI_API_KEY
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# H√†m g·ªçi OpenAI
def chatgpt_response(prompt):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}]
        )
        return response['choices'][0]['message']['content']
    except Exception as e:
        return f"L·ªói t·ª´ OpenAI: {e}"

# X·ª≠ l√Ω l·ªánh /ask
@bot.message_handler(commands=['ask'])
def handle_ask(message):
    prompt = message.text[len('/ask '):].strip()
    if not prompt:
        bot.reply_to(message, "‚ùó H√£y nh·∫≠p c√¢u h·ªèi sau l·ªánh /ask")
        return
    bot.reply_to(message, "‚è≥ ƒêang x·ª≠ l√Ω...")
    reply = chatgpt_response(prompt)
    bot.reply_to(message, reply)

# L·ªánh m·∫∑c ƒë·ªãnh n·∫øu ng∆∞·ªùi d√πng g·ª≠i g√¨ ƒë√≥
@bot.message_handler(func=lambda m: True)
def handle_all(message):
    bot.reply_to(message, "üí¨ D√πng l·ªánh /ask ƒë·ªÉ h·ªèi ChatGPT nh√©!")

# Ch·∫°y bot
bot.polling()

